language: cpp
sudo: false
dist: trusty
before_install:
  - echo ${CMAKE_EXTRA_ARGS}
  - |
    (
      if [ "$TRAVIS_OS_NAME" = 'windows' ]; then
        pwd
        choco install msys2 
        echo "=====A1====="
        ls /c/tools/
        echo "=====A2====="
        ls /c/tools/msys64/
        echo "=====A3====="
        ls /c/tools/msys64/mingw64/
        echo "=====A4====="
        ls /c/tools/msys64/mingw64/bin/
        echo "=====A5====="
        ls /c/tools/msys64/usr/bin/
        echo "=====A6====="
        export PATH=/c/tools/msys64/:/c/tools/msys64/mingw64/bin/:"$PATH"
        echo $PATH
      fi
    )
  - |
    (
      if [ "$TRAVIS_OS_NAME" = 'windows' ]; then
        /c/tools/msys64/msys2_shell.cmd -lc "pacman --noconfirm -Syu | tee update.log" 
        while [[ "$done" -le "1" ]]  
          do
            done=$(grep 'there is nothing to do' update.log --count)
            sleep 5
            echo "sleeping..."
            echo $(grep 'there is nothing to do' update.log --count) 
            echo "$done"
        done
        sleep 5
        cat update.log
        rm update.log
        echo "=====B-2====="
        pacman --noconfirm -S mingw-w64-x86_64-toolchain 
        while(grep 'there is nothing to do' update.log --count != 2)
        {
                sleep 2
                echo "sleeping..."
        }
        echo "=====B-1====="
        pacman pacman --noconfirm -S mingw-w64-x86_64-cmake 
        echo "=====B0====="
        pacman --noconfirm -S mingw-w64-x86_64-boost   
        echo "=====B1====="
        ls /c/tools/
        echo "=====B2====="
        ls /c/tools/msys64/
        echo "=====B3====="
        ls /c/tools/msys64/mingw64/
        echo "=====B4====="
        ls /c/tools/msys64/mingw64/bin/
        echo "=====B5====="
      else
        eval "${MATRIX_EVAL}"
        echo $MATRIX_EVAL
        echo $CC
        echo $CXX
        echo $FC
        gcc --version
        gcov --version
        gfortran --version
      fi
    )
script:
  - cmake . $CMAKE_EXTRA_ARGS 
  - make -j 2
  - ctest -VV
after_success:
    - if [ "${RUN_COVERALLS}" = "TRUE" ]; then
        coveralls -i source -i app --gcov-options '\-lp'; 
      fi

before_script:

cache: 
  apt: true

matrix:
  include:
    - name: "linux gcc6 coverage"
      sudo: true
      os: linux
      compiler: 
        - g++-6
      env: 
         - CMAKE_EXTRA_ARGS="${CMAKE_EXTRA_ARGS} -DCMAKE_BUILD_TYPE=Coverage"
         - RUN_COVERALLS="TRUE"
         - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6 && FC=gfortran && sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 60 --slave /usr/bin/g++ g++ /usr/bin/g++-6 --slave /usr/bin/gfortran gfortran /usr/bin/gfortran-6 --slave /usr/bin/gcov gcov /usr/bin/gcov-6 && sudo update-alternatives --config gcc && gcc --version && gcov --version && pip install --user cpp-coveralls"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
            - gfortran-6
            - cmake
            - libboost-program-options-dev

    - name: "linux gcc release"
      sudo: false
      compiler:
        - g++-6
      env:
         - CMAKE_EXTRA_ARGS="${CMAKE_EXTRA_ARGS} -DCMAKE_BUILD_TYPE=Release"
         - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6 && FC=gfortran"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
            - gfortran
            - cmake
            - libboost-program-options-dev
       
    - name: "linux clang"
      sudo: false
      os: linux
      compiler: 
        - clang-3.6
      env: 
        - MATRIX_EVAL="CC=clang-3.6 && CXX=clang++-3.6 && GC=gfortran" 
        - CMAKE_EXTRA_ARGS="${CMAKE_EXTRA_ARGS} -DCMAKE_BUILD_TYPE=Debug"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
          packages:
            - clang-3.6
            - gfortran 
            - cmake
            - libboost-program-options-dev
    - name: "osx clang"
      sudo: false
      os: osx
      compiler: 
        - clang
      osx_image: xcode10
      env: 
        - MATRIX_EVAL="export PATH=$TRAVIS_ROOT/bin:$PATH && brew install gcc || true  && brew link --overwrite gcc && brew install libomp || brew upgrade libomp || true && export LDFLAGS="-L/usr/local/opt/llvm/lib" && export CPPFLAGS="-I/usr/local/opt/llvm/include" && export CC=/usr/local/opt/llvm/bin/clang && export  CXX=/usr/local/opt/llvm/bin/clang++ && export FC=gfortran" 
        - CMAKE_EXTRA_ARGS="${CMAKE_EXTRA_ARGS} -DCMAKE_BUILD_TYPE=Debug -DOpenMP_CXX_FLAGS="-Xpreprocessor -fopenmp -I/usr/local/opt/libomp/include" -DOpenMP_CXX_LIB_NAMES="omp" -DOpenMP_omp_LIBRARY=/usr/local/opt/libomp/lib/libomp.dylib"
    - name: "windows debug"
      os: windows
      language: shell
      env:
        - MATRIX_EVAL="choco install msys2 && pacman --noconfirm -Syu && pacman -S mingw-w64-x86_64-toolchain && pacman --noconfirm -S dos2unix && pacman --noconfirm -S mingw-w64-x86_64-boost
        - CMAKE_EXTRA_ARGS="-G\"MSYS Makefiles\" -DCMAKE_BUILD_TYPE=Debug"


