language: c++
sudo: true

env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
    secure: "Pz0SXtEDhj8hLqq+MLTFWc50g4vyXu9zqKnu8tKKkLvXWJbbTn/aoAbpVZKN+NxL0iLj8cEz2kkz4jh2Fui+aZhgnxfl3uPJaN5AACRTzYLpEcqard96iNaC1n4Iih21CoGzNLeQifKzgwO7sLX/Q1JWoYIV3z/sLxin7htdsIwPzVoX2Ox6+k9dJuwbAAPT9ux/03lpLPqi+a726t7dVibNrf2MhIzPExSqQHraHGthowC5jRK3mVTBjTimojsb3kdBMjlp69KGOcrHSyHikWC3GQS6IJiDL38TyTBNigeQbhWqZ5g+Nw9zu9pnYSoXRYRkjq/PXLSRxR8pJ/NNfGn1+h0SMU8W6/t8RIn1t0bNSuBEm5cDwc8TZClKPh9sBdpDURkBTA9nl6t9ZjCUiCSkXM/1dgql2eSJ94Moh48ysUD7wFzNjtR2VVci4lAv4vfhyp/6HOJNCgO3T4MDqLWCMaQTjgbMKnMzFt3xbODk4M4DQV51W18wL+N9iE5iIAYN7JrdleUvdpuQWPa1QcuUMVtLMPjLtc4vitDwGWmtlvtyEe3lN1dXUaFcbB67VTSgpXig10rs0n2l8cxFrR4hTL1dKt2PZcyAdeYTw7NEHGX5BuHc0za3kpgmdK1dwFAsX8eYvKYsDDBc8hmHDm/citvo7EjVpWaEGgiBxrU="

compiler:
  - g++-6

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - gcc-6
      - g++-6
      - gfortran-6
      - cmake
      - libboost-program-options-dev
      - libboost-test-dev
  coverity_scan:
    project:
      name: "GeodynamicWorldBuilder/WorldBuilder"
      description: "World Builder: A geodynamic initial contitions generator."
    notification_email: menno.fraters@outlook.com
    build_command_prepend: "export CMAKE_EXTRA_ARGS=\"${CMAKE_EXTRA_ARGS} -DCMAKE_BUILD_TYPE=Coverage\" cmake . ${CMAKE_EXTRA_ARGS}"
    build_command: "make"
    branch_pattern: coverity_scan

before_install:
  - echo -n | openssl s_client -connect https://scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-
  - pip install --user cpp-coveralls

before_script:
    - gcc --version
    - gcov --version
    - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 60 --slave /usr/bin/g++ g++ /usr/bin/g++-6 --slave /usr/bin/gfortran gfortran /usr/bin/gfortran-6 --slave /usr/bin/gcov gcov /usr/bin/gcov-6
    - sudo update-alternatives --config gcc
    - gcc --version
    - gcov --version

script:
    - export CMAKE_EXTRA_ARGS="${CMAKE_EXTRA_ARGS} -DCMAKE_BUILD_TYPE=Coverage"
    - cmake . ${CMAKE_EXTRA_ARGS}
    - make
    - ctest -VV

after_success:
        - coveralls -i source -i app --gcov-options '\-lp' 
