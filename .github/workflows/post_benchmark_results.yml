name: post benchmark results in pull request

# read-write repo token
# access to secrets
on:
  workflow_run:
    workflows: ["benchmarks"]
    types:
      - completed

jobs:
  upload:
    strategy: 
      fail-fast: false
    runs-on: ubuntu-latest
    if: >
      ${{ github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: 'Download artifact'
        uses: actions/github-script@v3.1.0
        with:
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "benchmark_1_results"
            })[0];
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/benchmark_1_results.zip', Buffer.from(download.data));
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "benchmark_2_results"
            })[0];
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/benchmark_2_results.zip', Buffer.from(download.data));
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "benchmark_3_results"
            })[0];
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/benchmark_3_results.zip', Buffer.from(download.data));
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "benchmark_4_results"
            })[0];
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/benchmark_4_results.zip', Buffer.from(download.data));
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "benchmark_5_results"
            })[0];
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/benchmark_5_results.zip', Buffer.from(download.data));
      - run: |
              unzip benchmark_1_results.zip;
              unzip benchmark_2_results.zip;
              unzip benchmark_3_results.zip;
              unzip benchmark_4_results.zip;
              unzip benchmark_5_results.zip;

      - name: retrieve pull request number
        id: retrieve_pull_request_number
        run: |
              cat ${{github.workspace}}/NR;
              echo "::set-output name=pull_request_number::$(cat ${{github.workspace}}/NR)";

      - name: retrieve benchmark 1
        env:
          benchmark_number: 1
        id: retrieve_benchmark_1
        run: |
              cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log;
              echo "::set-output name=wall_time_${{env.benchmark_number}}_master_mean::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep wall_time | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | awk '{print $2}')";
              echo "::set-output name=wall_time_${{env.benchmark_number}}_master_std_dev::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep wall_time | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | awk '{print $4}')";
              echo "::set-output name=wall_time_${{env.benchmark_number}}_master_samples::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep samples | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | awk '{print $2}')";
              echo "::set-output name=wall_time_${{env.benchmark_number}}_feature_mean::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep wall_time | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | awk '{print $5}')";
              echo "::set-output name=wall_time_${{env.benchmark_number}}_feature_std_dev::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep wall_time | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | awk '{print $7}')";
              echo "::set-output name=wall_time_${{env.benchmark_number}}_feature_samples::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep samples | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | awk '{print $3}')";
              echo "::set-output name=wall_time_${{env.benchmark_number}}_CI_low::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep wall_time | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | sed 's/\[/ /g' | sed 's/\]/ /g' | awk '{print $8}')";
              echo "::set-output name=wall_time_${{env.benchmark_number}}_CI_high::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep wall_time | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | sed 's/\[/ /g' | sed 's/\]/ /g' | awk '{print $10}')";

      - name: retrieve benchmark 2
        env:
          benchmark_number: 2
        id: retrieve_benchmark_2
        run: |
              cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log;
              echo "::set-output name=wall_time_${{env.benchmark_number}}_master_mean::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep wall_time | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | awk '{print $2}')";
              echo "::set-output name=wall_time_${{env.benchmark_number}}_master_std_dev::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep wall_time | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | awk '{print $4}')";
              echo "::set-output name=wall_time_${{env.benchmark_number}}_master_samples::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep samples | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | awk '{print $2}')";
              echo "::set-output name=wall_time_${{env.benchmark_number}}_feature_mean::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep wall_time | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | awk '{print $5}')";
              echo "::set-output name=wall_time_${{env.benchmark_number}}_feature_std_dev::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep wall_time | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | awk '{print $7}')";
              echo "::set-output name=wall_time_${{env.benchmark_number}}_feature_samples::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep samples | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | awk '{print $3}')";
              echo "::set-output name=wall_time_${{env.benchmark_number}}_CI_low::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep wall_time | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | sed 's/\[/ /g' | sed 's/\]/ /g' | awk '{print $8}')";
              echo "::set-output name=wall_time_${{env.benchmark_number}}_CI_high::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep wall_time | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | sed 's/\[/ /g' | sed 's/\]/ /g' | awk '{print $10}')";

      - name: retrieve benchmark 3
        env:
          benchmark_number: 3
        id: retrieve_benchmark_3
        run: |
              cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log;
              echo "::set-output name=wall_time_${{env.benchmark_number}}_master_mean::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep wall_time | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | awk '{print $2}')";
              echo "::set-output name=wall_time_${{env.benchmark_number}}_master_std_dev::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep wall_time | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | awk '{print $4}')";
              echo "::set-output name=wall_time_${{env.benchmark_number}}_master_samples::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep samples | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | awk '{print $2}')";
              echo "::set-output name=wall_time_${{env.benchmark_number}}_feature_mean::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep wall_time | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | awk '{print $5}')";
              echo "::set-output name=wall_time_${{env.benchmark_number}}_feature_std_dev::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep wall_time | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | awk '{print $7}')";
              echo "::set-output name=wall_time_${{env.benchmark_number}}_feature_samples::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep samples | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | awk '{print $3}')";
              echo "::set-output name=wall_time_${{env.benchmark_number}}_CI_low::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep wall_time | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | sed 's/\[/ /g' | sed 's/\]/ /g' | awk '{print $8}')";
              echo "::set-output name=wall_time_${{env.benchmark_number}}_CI_high::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep wall_time | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | sed 's/\[/ /g' | sed 's/\]/ /g' | awk '{print $10}')";

      - name: retrieve benchmark 4
        env:
          benchmark_number: 4
        id: retrieve_benchmark_4
        run: |
              cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log;
              echo "::set-output name=wall_time_${{env.benchmark_number}}_master_mean::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep wall_time | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | awk '{print $2}')";
              echo "::set-output name=wall_time_${{env.benchmark_number}}_master_std_dev::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep wall_time | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | awk '{print $4}')";
              echo "::set-output name=wall_time_${{env.benchmark_number}}_master_samples::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep samples | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | awk '{print $2}')";
              echo "::set-output name=wall_time_${{env.benchmark_number}}_feature_mean::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep wall_time | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | awk '{print $5}')";
              echo "::set-output name=wall_time_${{env.benchmark_number}}_feature_std_dev::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep wall_time | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | awk '{print $7}')";
              echo "::set-output name=wall_time_${{env.benchmark_number}}_feature_samples::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep samples | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | awk '{print $3}')";
              echo "::set-output name=wall_time_${{env.benchmark_number}}_CI_low::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep wall_time | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | sed 's/\[/ /g' | sed 's/\]/ /g' | awk '{print $8}')";
              echo "::set-output name=wall_time_${{env.benchmark_number}}_CI_high::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep wall_time | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | sed 's/\[/ /g' | sed 's/\]/ /g' | awk '{print $10}')";

      - name: retrieve benchmark 5
        env:
          benchmark_number: 5
        id: retrieve_benchmark_5
        run: |
              cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log;
              echo "::set-output name=wall_time_${{env.benchmark_number}}_master_mean::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep wall_time | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | awk '{print $2}')";
              echo "::set-output name=wall_time_${{env.benchmark_number}}_master_std_dev::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep wall_time | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | awk '{print $4}')";
              echo "::set-output name=wall_time_${{env.benchmark_number}}_master_samples::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep samples | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | awk '{print $2}')";
              echo "::set-output name=wall_time_${{env.benchmark_number}}_feature_mean::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep wall_time | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | awk '{print $5}')";
              echo "::set-output name=wall_time_${{env.benchmark_number}}_feature_std_dev::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep wall_time | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | awk '{print $7}')";
              echo "::set-output name=wall_time_${{env.benchmark_number}}_feature_samples::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep samples | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | awk '{print $3}')";
              echo "::set-output name=wall_time_${{env.benchmark_number}}_CI_low::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep wall_time | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | sed 's/\[/ /g' | sed 's/\]/ /g' | awk '{print $8}')";
              echo "::set-output name=wall_time_${{env.benchmark_number}}_CI_high::$(cat ${{github.workspace}}/analyze_${{env.benchmark_number}}.log | grep wall_time | sed 's/\x1B\[[0-9;]\{1,\}[A-Za-z]//g' | sed 's/\[/ /g' | sed 's/\]/ /g' | awk '{print $10}')";

      - name: Find Comment
        continue-on-error: true
        uses: peter-evans/find-comment@v1
        id: find_comment
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ steps.output_result.outputs.pull_request_number }}
          comment-author: 'github-actions[bot]'

      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          comment-id: ${{ steps.find_comment.outputs.comment-id }}
          issue-number: ${{ steps.output_result.outputs.pull_request_number }}
          body: |
                 | Benchmark | Master | Feature | Difference (99.9% CI) |
                 | --- | --- | --- | --- |
                 | Slab interpolation simple none | ${{ steps.output_result.outputs.wall_time_1_master_mean }} ± ${{ steps.output_result.outputs.wall_time_1_master_std_dev }} (s=${{ steps.output_result.outputs.wall_time_1_master_samples }})| ${{ steps.output_result.outputs.wall_time_1_feature_mean }} ± ${{ steps.output_result.outputs.wall_time_1_feature_std_dev }} (s=${{ steps.output_result.outputs.wall_time_1_feature_samples }})| ${{ steps.output_result.outputs.wall_time_1_CI_low }} .. ${{ steps.output_result.outputs.wall_time_1_CI_high }} |
                 | Slab interpolation curved simple none | ${{ steps.output_result.outputs.wall_time_2_master_mean }} ± ${{ steps.output_result.outputs.wall_time_2_master_std_dev }} (s=${{ steps.output_result.outputs.wall_time_2_master_samples }})| ${{ steps.output_result.outputs.wall_time_2_feature_mean }} ± ${{ steps.output_result.outputs.wall_time_2_feature_std_dev }} (s=${{ steps.output_result.outputs.wall_time_2_feature_samples }})| ${{ steps.output_result.outputs.wall_time_2_CI_low }} .. ${{ steps.output_result.outputs.wall_time_2_CI_high }} |
                 | Spherical slab interpolation simple none | ${{ steps.output_result.outputs.wall_time_3_master_mean }} ± ${{ steps.output_result.outputs.wall_time_3_master_std_dev }} (s=${{ steps.output_result.outputs.wall_time_3_master_samples }})| ${{ steps.output_result.outputs.wall_time_3_feature_mean }} ± ${{ steps.output_result.outputs.wall_time_3_feature_std_dev }} (s=${{ steps.output_result.outputs.wall_time_3_feature_samples }})| ${{ steps.output_result.outputs.wall_time_3_CI_low }} .. ${{ steps.output_result.outputs.wall_time_3_CI_high }} |
                 | Slab interpolation simple curved CMS | ${{ steps.output_result.outputs.wall_time_4_master_mean }} ± ${{ steps.output_result.outputs.wall_time_4_master_std_dev }} (s=${{ steps.output_result.outputs.wall_time_4_master_samples }})| ${{ steps.output_result.outputs.wall_time_4_feature_mean }} ± ${{ steps.output_result.outputs.wall_time_4_feature_std_dev }} (s=${{ steps.output_result.outputs.wall_time_4_feature_samples }})| ${{ steps.output_result.outputs.wall_time_4_CI_low }} .. ${{ steps.output_result.outputs.wall_time_4_CI_high }} |
                 | Spherical slab interpolation simple CMS | ${{ steps.output_result.outputs.wall_time_5_master_mean }} ± ${{ steps.output_result.outputs.wall_time_5_master_std_dev }} (s=${{ steps.output_result.outputs.wall_time_5_master_samples }})| ${{ steps.output_result.outputs.wall_time_5_feature_mean }} ± ${{ steps.output_result.outputs.wall_time_5_feature_std_dev }} (s=${{ steps.output_result.outputs.wall_time_5_feature_samples }})| ${{ steps.output_result.outputs.wall_time_5_CI_low }} .. ${{ steps.output_result.outputs.wall_time_5_CI_high }} |
          edit-mode: replace
