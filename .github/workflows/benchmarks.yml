name: benchmarks

on: [pull_request]

jobs:
  benchmarks:
    strategy: 
      fail-fast: false
    permissions:
      pull-requests: write
    runs-on: ubuntu-latest

    steps:
    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v1.9
      with:
        cmake-version: '3.16.x'

    - name: Use cmake
      run: cmake --version
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          ~/.cargo/git/
          target/
          ./target/
          ${{github.workspace}}/
          ${{github.workspace}}/master/
          ${{github.workspace}}/master/build/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}


    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable

    - name: Checkout
      uses: actions/checkout@v2
      with:
        repository: MFraters/cbdr
        ref: github_actions_fix
        path: cbdr


    - name: cd Build Environment
      run: |
            cd ${{github.workspace}}/cbdr/;
            cargo build --release;

    - name: Checkout
      uses: actions/checkout@v2
      with:
        path: feature

    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: master
        path: master

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/master/build


    - name: cd Build Environment
      run: |
            cd ${{github.workspace}}/master/build;
            pwd;
            ls;

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/master/build
      run: |
            pwd;
            ls;
            cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-Werror -DWB_INCLUDE_UNIT_TEST=FALSE ${{github.workspace}}/master/;

    - name: Build gwb
      working-directory: ${{github.workspace}}/master/build
      shell: bash
      run: cmake --build ${{github.workspace}}/master/build --config Release 



    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/feature/build

    - name: cd Build Environment
      run: cd ${{github.workspace}}/feature/build;

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/feature/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-Werror -DWB_INCLUDE_UNIT_TEST=FALSE ${{github.workspace}}/feature/

    - name: Build gwb
      working-directory: ${{github.workspace}}/feature/build
      shell: bash
      run: cmake --build ${{github.workspace}}/feature/build --config Release 

    - name: run benchmark 1
      run: |
            cd ${{github.workspace}}/cbdr/;
            time cargo run --release sample --timeout=60s "master:${{github.workspace}}/master/build/bin/./WorldBuilderVisualization  ${{github.workspace}}/feature/tests/app/slab_interpolation_simple_none.wb ${{github.workspace}}/feature/tests/visualization/gridfile.grid" "feature:${{github.workspace}}/feature/build/bin/./WorldBuilderVisualization ${{github.workspace}}/feature/tests/app/slab_interpolation_simple_none.wb ${{github.workspace}}/feature/tests/visualization/gridfile.grid" > ${{github.workspace}}/result_1.csv
    
    - name: run benchmark 2
      run: |
            cd ${{github.workspace}}/cbdr/;
            time cargo run --release sample --timeout=60s "master:${{github.workspace}}/master/build/bin/./WorldBuilderVisualization  ${{github.workspace}}/feature/tests/app/slab_interpolation_simple_curved_none.wb ${{github.workspace}}/feature/tests/visualization/gridfile.grid" "feature:${{github.workspace}}/feature/build/bin/./WorldBuilderVisualization ${{github.workspace}}/feature/tests/app/slab_interpolation_simple_curved_none.wb ${{github.workspace}}/feature/tests/visualization/gridfile.grid" > ${{github.workspace}}/result_2.csv
    
    - name: cat
      run: |
          cat ${{github.workspace}}/result_1.csv;
          cat ${{github.workspace}}/result_2.csv;

    - name: change dir
      run: cd ${{github.workspace}}/cbdr/

    - name: output benchmark results
      run: |
            cd ${{github.workspace}}/cbdr/;
            mkdir ${{github.workspace}}/benchmark_results/;
            echo "${{ github.event.number }}" > ${{github.workspace}}/benchmark_results/NR
            RUST_BACKTRACE=1 cat ${{github.workspace}}/result_1.csv | cargo run --release analyze --disable-dynamic-printing > ${{github.workspace}}/benchmark_results/analyze_1.log ||:;
            RUST_BACKTRACE=1 cat ${{github.workspace}}/result_2.csv | cargo run --release analyze --disable-dynamic-printing > ${{github.workspace}}/benchmark_results/analyze_2.log ||:;
            analyze_contents_1_var=$(cat ${{github.workspace}}/benchmark_results/analyze_1.log);
            analyze_contents_2_var=$(cat ${{github.workspace}}/benchmark_results/analyze_2.log);

    - uses: actions/upload-artifact@v2
      with:
        name: benchmark_results
        path: benchmark_results/
